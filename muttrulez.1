.TH "MUTTRULEZ" "1" "" "" "Version 0"
.PP
Email rule engine for mutt users.
Use from cron to run rules automatically.
Supports IMAP for reading and whatever mutt uses for sending.
Takes IMAP config from \f[C]~/.muttrc\f[]
.SH SYNOPSYS
.IP
.nf
\f[C]
muttrulez\ [OPTIONS]
muttrulez\ [OPTIONS]\ <config>
\f[]
.fi
.SH OPTIONS
.IP
.nf
\f[C]
\-u\ \ Run\ unit\-tests,\ as\ defined\ at\ the\ beginning\ of\ the\ muttrulez\ script
\-h\ \ Print\ help\ text
\f[]
.fi
.SH CONFIGURATION
.PP
Reads rule configuration from \f[C]~/.muttrulez\f[] by default, or from
config file supplied on command line.
The config format is YAML.
.PP
The config contains a list of rules, each with 3 mandatory fields:
\f[C]name\f[], \f[C]search\f[], \f[C]steps\f[].
.SS EXAMPLE CONFIG FILE
.PP
Look for emails from foo\@bar.hu with PDF attachments, save them in
\f[C]~/Downloads\f[], if PDF contains text \[aq]Eggs\[aq], forward it to
\f[C]baz\@spam.com\f[] with default email text body, flag such emails
with \f[C]$Forwarded\f[].
.PP
Archive emails older than 6 months to folder \[aq]Old\[aq].
.PP
The example illustrates diverse YAML styles, as accepted by
\f[C]YAML::XS\f[].
.IP
.nf
\f[C]
\-\-\-
\-\ name:\ Forward\ PDF
\ \ search:
\ \ \ \ FROM:\ foo\@bar.hu
\ \ steps:
\ \ \-\ {\ action:\ accept,\ type:\ attachment,\ mime:\ application/pdf,\ save:\ ~/Downloads\ }
\ \ \-\ {\ action:\ accept,\ type:\ pipegrep,\ cmd:\ pdftotext\ _\ \-,\ regex:\ Eggs\ }
\ \ \-\ action:\ accept
\ \ \ \ type:\ email
\ \ \ \ to:\ baz\@spam.com
\ \ \ \ attach:\ _
\ \ \ \ text:\ |
\ \ \ \ \ \ Hi\ Baz,
\ \ \ \ \ \ PDF\ with\ Eggs\ forwarded.
\ \ \ \ \ \ Yours\ Truly,\ Me
\ \ \-\ {\ type:\ add_flags,\ flag:\ $Forwarded\ }
\-\ name:\ Archive
\ \ search:
\ \ \ \ BEFORE:\ 6m
\ \ steps:
\ \ \-\ {\ action:\ accept,\ type:\ move,\ folder:\ old\ }
\f[]
.fi
.SH SEARCH
.PP
The search field contains a hash with IMAP compliant fields as keys.
See RFC3501 http://www.ietf.org/rfc/rfc3501.txt section 6.4.4 for search
keys.
.SH STEPS
.PP
Each rule has a flat list of steps, which process all your conditions
and actions.
.PP
Each step returns a list of values internally, depending on the type.
.PP
Each step in turn takes the return list of the previous step, which you
can refer to as the \f[C]_\f[] symbol.
.PP
The \f[C]action\f[] field of each step determines whether to continue
processing further steps:
.IP \[bu] 2
accept: continue to next step if step returned list, otherwise stop rule
.IP \[bu] 2
reject: stop rule if step returned list, otherwise continue to next
step, pass 1
.PP
Each step has a manadatory \f[C]type\f[] field, plus zero or more
type\-dependent extra fields.
.SH STEP TYPES
.SS flag
.PP
Continue or abort on certain MIME flags found on email.
.PP
Fields:
.IP \[bu] 2
flag: IMAP flag you\[aq]re looking for
.PP
Returns: the specified flag if found on email, or nothing
.SS attachment
.PP
Searches for and optionally saves attachments of certain types.
.PP
Fields:
.IP \[bu] 2
mime: MIME type of attachment you\[aq]re looking for
.IP \[bu] 2
save: folder to save file permanently, optional
.PP
Returns: filenames of matching attachments
.SS pipegrep
.PP
Run a program for each element in input, search regex in its STDOUT
.PP
Fields:
.IP \[bu] 2
cmd: command line to run, refer to input element with \f[C]_\f[]
.IP \[bu] 2
regex: pattern to search for in command\[aq]s STDOUT
.PP
Returns: input elements for which pattern was found in command\[aq]s
STDOUT
.SS email
.PP
Send email using mutt.
.PP
Fields:
.IP \[bu] 2
to: email address
.IP \[bu] 2
attach: filename or \f[C]_\f[] to attach input list of filees
.IP \[bu] 2
subject: optional, processed email\[aq]s is used when missing
.IP \[bu] 2
text: text of email body
.PP
Returns: 1 if mutt sends email successfully
.SS add_flags
.PP
Set flags for emails
.PP
Fields:
.IP \[bu] 2
flag: flag name to set
.PP
Returns: 1 on success
.SS del_flags
.PP
Delete flags for emails
.PP
Fields:
.IP \[bu] 2
flag: flag name to set
.PP
Returns: 1 on success
.SS copy
.PP
Copy email to IMAP folder
.PP
Fields:
.IP \[bu] 2
folder: IMAP folder name
.PP
Returns: 1 on success
.SS move
.PP
Move email to IMAP folder
.PP
Fields:
.IP \[bu] 2
folder: IMAP folder name
.PP
Returns: 1 on success
.SS delete
.PP
Delete email
.PP
Returns: 1 on success
